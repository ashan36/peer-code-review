{"version":3,"sources":["themes/theme.js","pages/Ping.js","pages/Landing.js","components/SignUpContainer.js","pages/Signup.js","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","typography","fontFamily","fontSize","h1","palette","primary","main","Ping","props","_useState","useState","_useState2","Object","slicedToArray","result","setResult","_useState3","_useState4","answer","setAnswer","useEffect","incrementStep","react_default","a","createElement","Typography","FormControl","TextField","label","onChange","e","target","value","Button","onClick","status","fetch","method","headers","Content-Type","body","JSON","stringify","teamName","then","res","json","Error","response","catch","err","console","log","message","LandingPage","state","welcomeMessage","step","_this","setState","prevState","_this2","this","_this3","classes","className","landingContainer","Fragment","react_router_dom","to","react_router","path","render","pages_Ping","assign","Component","withStyles","margin","spacing","unit","useStyles","makeStyles","root","padding","backgroundImage","height","signUp","width","maxHeight","overflowY","textAlign","rounded","backgroundColor","SignUpContainer","Grid","container","direction","justify","alignItems","item","xs","s","Paper","elevation","children","input","text","fontWeight","button","link","marginTop","Signup","email","setEmail","password","setPassword","_useState5","_useState6","secondPassword","setSecondPassword","components_SignUpContainer","error","test","variant","length","type","helperText","color","Login","App","MuiThemeProvider","exact","component","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40d0fa47.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Roboto\"',\r\n    fontSize: 12,\r\n    h1: {\r\n      // could customize the h1 variant as well\r\n    }\r\n  },\r\n  palette: {\r\n    primary: { main: \"#DF1B1B\" }\r\n  }\r\n});\r\n","import { FormControl, TextField, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction Ping(props) {\r\n  const [result, setResult] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  useEffect(() => {\r\n    props.incrementStep();\r\n  }, []);\r\n\r\n  const submitAnswer = () => {\r\n    let status;\r\n    fetch(\"/ping\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ teamName: answer })\r\n    })\r\n      .then(res => {\r\n        status = res.status;\r\n        if (status < 500) return res.json();\r\n        else throw Error(\"Server error\");\r\n      })\r\n      .then(res => {\r\n        setResult(res.response);\r\n        if (status === 200) props.incrementStep();\r\n      })\r\n      .catch(err => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography>\r\n        Step 3: Add your first name to server/.env, refresh and test the result\r\n        below\r\n      </Typography>\r\n      <Typography>{result}</Typography>\r\n\r\n      <FormControl>\r\n        <TextField\r\n          label={\"first name\"}\r\n          onChange={e => setAnswer(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <Button onClick={submitAnswer}>Submit</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ping;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Route, Link } from \"react-router-dom\";\r\n\r\nimport Ping from \"./Ping\";\r\n\r\nconst landinPageStyle = theme => ({\r\n  landingContainer: {\r\n    margin: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass LandingPage extends Component {\r\n  state = {\r\n    welcomeMessage: \"Step 1: Run the server and refresh (not running)\",\r\n    step: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"/welcome\")\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.status === 200) return res.json();\r\n        else throw Error(\"Couldn't connect to the server\");\r\n      })\r\n      .then(res => {\r\n        this.setState({ welcomeMessage: res.welcomeMessage });\r\n        this.incrementStep();\r\n      })\r\n      .catch(err => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n\r\n  incrementStep = () => {\r\n    this.setState(prevState => ({ step: (prevState.step += 1) }));\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.landingContainer}>\r\n        <Typography>{this.state.welcomeMessage}</Typography>\r\n        {this.state.step >= 1 && (\r\n          <React.Fragment>\r\n            <Link to=\"/ping\">Step 2: Click here </Link>\r\n            <Route\r\n              path=\"/ping\"\r\n              render={props => {\r\n                return (\r\n                  <Ping\r\n                    {...props}\r\n                    incrementStep={this.incrementStep}\r\n                    step={this.state.step}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {this.state.step >= 3 && (\r\n          <Typography>All done! Now go make a pull request!</Typography>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(landinPageStyle)(LandingPage);\r\n","import React from \"react\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: \"10vh\",\r\n    backgroundImage: \"linear-gradient(#6E3ADB, #501CBD)\",\r\n    height: \"80vh\"\r\n  },\r\n  signUp: {\r\n    width: \"50vw\",\r\n    maxHeight: \"80vh\",\r\n    overflowY: \"auto\",\r\n    padding: \"5vh\",\r\n    textAlign: \"center\",\r\n    rounded: true,\r\n    backgroundColor: \"white\",\r\n    margin: \"auto\"\r\n  }\r\n});\r\n\r\nconst SignUpContainer = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} s={6}>\r\n          <Paper className={classes.signUp} elevation={3}>\r\n            {props.children}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpContainer;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, TextField, Typography, makeStyles } from \"@material-ui/core\";\r\nimport SignUpContainer from \"../components\";\r\n\r\nconst useStyles = makeStyles({\r\n  input: {\r\n    textAlign: \"center\",\r\n    width: \"60%\",\r\n    margin: \"2vh\"\r\n  },\r\n  text: {\r\n    fontSize: \"3vw\",\r\n    fontWeight: \"800\"\r\n  },\r\n  button: {\r\n    backgroundColor: \"#43DDC1\"\r\n  },\r\n  link: {\r\n    marginTop: \"2vh\"\r\n  }\r\n});\r\n\r\nconst Signup = () => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [secondPassword, setSecondPassword] = useState(\"\");\r\n\r\n  const validateEmail = () => {\r\n    if (email === \"\") {\r\n      return false;\r\n    } else return !/\\S+@\\S+\\.\\S+/.test(email);\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    if (password.length > 6 || password.length === 0) {\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  const validateSecondPassword = () => {\r\n    if (secondPassword === password || secondPassword === \"\") {\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  const submit = () => {\r\n    return; // placeholder\r\n  };\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <Typography className={classes.text}> Create An Account </Typography>\r\n      <br />\r\n      <TextField\r\n        className={classes.input}\r\n        error={validateEmail()}\r\n        label=\"email address\"\r\n        variant=\"outlined\"\r\n        onChange={e => {\r\n          setEmail(e.target.value);\r\n        }}\r\n      />\r\n      <br />\r\n      <TextField\r\n        className={classes.input}\r\n        error={validatePassword()}\r\n        label=\"password\"\r\n        type=\"password\"\r\n        variant=\"outlined\"\r\n        helperText={\r\n          password.length > 0 && password.length < 6\r\n            ? \"password must be at least 6 characters\"\r\n            : \"\"\r\n        }\r\n        onChange={e => {\r\n          setPassword(e.target.value);\r\n        }}\r\n      />\r\n      <br />\r\n      <TextField\r\n        className={classes.input}\r\n        error={validateSecondPassword()}\r\n        label=\"re-enter password\"\r\n        type=\"password\"\r\n        variant=\"outlined\"\r\n        helperText={\r\n          secondPassword.length > 0 && password !== secondPassword\r\n            ? \"passwords must match\"\r\n            : \"\"\r\n        }\r\n        onChange={e => {\r\n          setSecondPassword(e.target.value);\r\n        }}\r\n      />\r\n      <br />\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={submit}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n      <Typography className={classes.link}>\r\n        Already have an account? <Link to=\"/login\">login</Link>\r\n      </Typography>\r\n    </SignUpContainer>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, TextField, Typography, makeStyles } from \"@material-ui/core\";\r\nimport SignUpContainer from \"../components\";\r\n\r\nconst useStyles = makeStyles({\r\n  input: {\r\n    textAlign: \"center\",\r\n    width: \"60%\",\r\n    margin: \"2vh\"\r\n  },\r\n  text: {\r\n    fontSize: \"3vw\",\r\n    fontWeight: \"800\"\r\n  },\r\n  button: {\r\n    backgroundColor: \"#43DDC1\"\r\n  },\r\n  link: {\r\n    marginTop: \"2vh\"\r\n  }\r\n});\r\n\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const submit = () => {\r\n    return; // placeholder\r\n  };\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <Typography className={classes.text}> Sign In </Typography>\r\n      <br />\r\n      <TextField\r\n        className={classes.input}\r\n        label=\"email address\"\r\n        variant=\"outlined\"\r\n        onChange={e => {\r\n          setEmail(e.target.value);\r\n        }}\r\n      />\r\n      <br />\r\n      <TextField\r\n        className={classes.input}\r\n        label=\"password\"\r\n        type=\"password\"\r\n        variant=\"outlined\"\r\n        helperText={\r\n          password.length > 0 && password.length < 6 ? \"error text\" : \"\"\r\n        }\r\n        onChange={e => {\r\n          setPassword(e.target.value);\r\n        }}\r\n      />\r\n      <br />\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={submit}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n      <Typography className={classes.link}>\r\n        Don't have an account? <Link to=\"/signup\">sign up</Link>\r\n      </Typography>\r\n    </SignUpContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { MuiThemeProvider } from \"@material-ui/core\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport { theme } from \"./themes/theme\";\r\nimport LandingPage from \"./pages/Landing\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Login from \"./pages/Login\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <BrowserRouter>\r\n        <Route exact path=\"/\" component={LandingPage} />\r\n        <Route path=\"/signup\" component={Signup} />\r\n        <Route path=\"/login\" component={Login} />\r\n      </BrowserRouter>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}